@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager NavigationManager

<br />
<h3>Welcome @_username!</h3>

<div class="container">
	<div class="row">
		<div class="col-sm-4 offset-4 input-group">
			<h2>Username</h2>
			<input class="form-control" @bind="_username" @bind:event="oninput" />
		</div>
	</div>
	<div class="row">
		<div class="col-sm">
			<h3>Create new chat room</h3>
			<input @bind="_createName" />
			<br />
			<input type="button" value="Create Room" @onclick="CreateRoom" />
		</div>
		<div class="col-sm">
			<h3>Join Room</h3>
			<input @bind="_joinRoomName" />
			<br />
			<input type="button" value="Join Room" @onclick="JoinRoom" />
		</div>
	</div>
</div>

@code {

	private string _username;
	private string _createName;
	private string _joinRoomName;

	private HubConnection _hubConnection;

	protected override async Task OnInitializedAsync()
	{
		// Dont connect SR on page load, instead only when an action runs
	}

	private async Task CreateRoom()
	{
		// Connect to SR hub
		_hubConnection = new HubConnectionBuilder()
			.WithUrl(NavigationManager.ToAbsoluteUri("/chatHub"))
			.Build();

		// RoomCreated
		_hubConnection.On<string>("RoomCreated", (roomName) =>
		{
			NavigationManager.NavigateTo($"/Room/{roomName}/{_username}");
		});

		await _hubConnection.StartAsync();

		await _hubConnection.SendAsync("CreateRoom", _createName, _username);
	}

	private void JoinRoom()
	{
		// TODO: Name room must be over 8 characters

		// Redirect to Room
		NavigationManager.NavigateTo($"/Room/{_joinRoomName}/{_username}");
	}
}
